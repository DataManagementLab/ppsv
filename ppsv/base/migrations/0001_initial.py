# Generated by Django 4.0 on 2023-04-15 20:44

import base.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('registration_start', models.DateTimeField(default=base.models.Term.get_active_term_registration_start, verbose_name='registration Start')),
                ('registration_deadline', models.DateTimeField(default=base.models.Term.get_active_term_registration_deadline, verbose_name='registration Deadline')),
                ('description', models.TextField(verbose_name='description')),
                ('cp', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='CP')),
                ('faculty', models.CharField(choices=[('FB01', 'Dept. 01 - Law and Economics'), ('FB02', 'Dept. 02 - History and Social Sciences'), ('FB03', 'Dept. 03 - Human Sciences'), ('FB04', 'Dept. 04 - Mathematics'), ('FB05', 'Dept. 05 â€“ Physics'), ('FB07', 'Dept. 07 - Chemistry'), ('FB10', 'Dept. 10 - Biology'), ('FB11', 'Dept. 11 - Materials and Earth Sciences'), ('FB13', 'Dept. 13 - Civil and Environmental Engineering'), ('FB15', 'Dept. 15 - Architecture'), ('FB16', 'Dept. 16 - Mechanical Engineering'), ('FB18', 'Dept. 18 - Electrical Engineering and Information Technology'), ('FB20', 'Dept. 20 - Computer Science')], max_length=4, verbose_name='faculty')),
                ('motivation_text', models.BooleanField(default=False, verbose_name='motivation texts are required')),
                ('organizer', models.CharField(max_length=200, verbose_name='organizer')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.user')),
            ],
            options={
                'verbose_name': 'course',
                'verbose_name_plural': 'courses',
            },
        ),
        migrations.CreateModel(
            name='CourseType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=200, verbose_name='type')),
            ],
            options={
                'verbose_name': 'course Type',
                'verbose_name_plural': 'course Types',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection_count', models.IntegerField(default=1, verbose_name='number of collections')),
            ],
            options={
                'verbose_name': 'group',
                'verbose_name_plural': 'groups',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('tucan_id', models.CharField(max_length=8, primary_key=True, serialize=False, verbose_name='student ID')),
                ('firstname', models.CharField(max_length=200, verbose_name='first Name')),
                ('lastname', models.CharField(max_length=200, verbose_name='last Name')),
                ('email', models.EmailField(max_length=254)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='auth.user')),
            ],
            options={
                'verbose_name': 'student',
                'verbose_name_plural': 'students',
            },
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='title')),
                ('active_term', models.BooleanField(default=False, verbose_name='active term')),
                ('registration_start', models.DateTimeField(verbose_name='registration Start')),
                ('registration_deadline', models.DateTimeField(verbose_name='registration Deadline')),
            ],
            options={
                'verbose_name': 'term',
                'verbose_name_plural': 'terms',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('max_slots', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='max slot count')),
                ('min_slot_size', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='min GroupSize')),
                ('max_slot_size', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='max GroupSize')),
                ('description', models.TextField(verbose_name='description')),
                ('file', models.FileField(blank=True, upload_to=base.models.course_directory_path, verbose_name='file')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.course', verbose_name='course')),
            ],
            options={
                'verbose_name': 'topic',
                'verbose_name_plural': 'topics',
            },
        ),
        migrations.CreateModel(
            name='TopicSelection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motivation', models.TextField(blank=True, verbose_name='motivation Text')),
                ('priority', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(99), django.core.validators.MinValueValidator(1)], verbose_name='priority')),
                ('collection_number', models.IntegerField(default=1, verbose_name='collection number')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.group', verbose_name='group')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.topic', verbose_name='topic')),
            ],
            options={
                'verbose_name': 'topic Selection',
                'verbose_name_plural': 'topic Selections',
            },
        ),
        migrations.CreateModel(
            name='TextSaves',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=200, verbose_name='topic')),
                ('motivation', models.TextField(verbose_name='motivation Text')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.student', verbose_name='student')),
            ],
            options={
                'verbose_name': 'text Save',
                'verbose_name_plural': 'text Saves',
            },
        ),
        migrations.AddField(
            model_name='group',
            name='students',
            field=models.ManyToManyField(to='base.Student', verbose_name='students'),
        ),
        migrations.AddField(
            model_name='group',
            name='term',
            field=models.ForeignKey(default=base.models.Term.get_active_term, on_delete=django.db.models.deletion.CASCADE, to='base.term', verbose_name='term'),
        ),
        migrations.AddField(
            model_name='course',
            name='term',
            field=models.ForeignKey(default=base.models.Term.get_active_term, on_delete=django.db.models.deletion.CASCADE, to='base.term'),
        ),
        migrations.AddField(
            model_name='course',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.coursetype', verbose_name='type'),
        ),
    ]
